on_actions = {
  on_startup = {
    effect = {
      GER = {
        # initialize array of minelaying countries
        init_minelaying_countries_array = yes

        # loop by minelaying countries, giving them back their damn minelayers
        if = {
          limit = { are_mines_enabled = yes }

          for_each_scope_loop = {
            array = minelaying_countries

            meta_effect = {
              text = {
                load_oob = [CURRENT_TAG]_1936_minelayers
              }
              CURRENT_TAG = "[THIS.GetTag]"
            }
          }
        }
        # loop by minelaying countries, giving them compensation for deleted ships
        else = {
          for_each_scope_loop = {
            array = minelaying_countries

            meta_effect = {
              text = {
                load_oob = [CURRENT_TAG]_1936_minelayers_replacement
              }
              CURRENT_TAG = "[THIS.GetTag]"
            }
          }
        }
        # what if strat. bombers allowed?
        if = {
          limit = { are_strats_enabled = yes }

          every_country = {
            limit = {
              OR = {
                original_tag = SOV
                original_tag = GER
              }
            }

            set_technology = {
              strategic_bomber1 = 1
            }
          }

          SOV = { load_oob = "SOV_1936_strats" }
        }

      }
    }
  }

  on_join_faction = {
    effect = {
      if = {
        limit = {
          NOT = {
            has_country_flag = nma_faction_member
          }
        }

        set_temp_variable = { faction_leader = FROM }
        set_temp_variable = { newcomer = THIS }

        random_country = {
          limit = {
            is_spymaster = yes
            is_in_faction_with = faction_leader
          }

          set_temp_variable = { spymaster = THIS }

          every_country = {
            limit = {
              var:spymaster = {
                check_variable = { has_collaboration@PREV > 0 }
              }
            }

            var:spymaster = {
              set_temp_variable = { spymaster_collaboration = has_collaboration@PREV }
            }
            var:newcomer = {
              set_temp_variable = { newcomer_collaboration = has_collaboration@PREV }
            }

            if = {
              limit = {
                check_variable = { spymaster_collaboration > newcomer_collaboration }
              }

              var:newcomer = {
                set_collaboration = {
                  target = PREV
                  value = spymaster_collaboration
                }
              }
            }

          }

        }

        set_country_flag = nma_faction_member
      }
    }
  }
}
